// <auto-generated />
using System;
using AgentDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AgentDB.Migrations
{
    [DbContext(typeof(AgentContext))]
    partial class AgentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AgentApp.Models.Accommodation", b =>
                {
                    b.Property<long>("Id");

                    b.Property<long?>("AccommodationTypeId");

                    b.Property<int>("CancellationDays");

                    b.Property<decimal>("CancellationPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Category");

                    b.Property<decimal>("DefaultPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description");

                    b.Property<bool>("FreeCancellation");

                    b.Property<long?>("LocationId");

                    b.Property<int>("NumberOfPersons");

                    b.Property<long>("agentId");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationTypeId");

                    b.HasIndex("LocationId");

                    b.ToTable("Accommodations");
                });

            modelBuilder.Entity("AgentApp.Models.AccommodationType", b =>
                {
                    b.Property<long>("Id");

                    b.Property<string>("TypeName");

                    b.HasKey("Id");

                    b.ToTable("AccommodationTypes");
                });

            modelBuilder.Entity("AgentApp.Models.AdditionalService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccommodationId");

                    b.Property<string>("AdditionalServiceName");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationId");

                    b.ToTable("AdditionalServices");
                });

            modelBuilder.Entity("AgentApp.Models.Location", b =>
                {
                    b.Property<long>("Id");

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("AgentApp.Models.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<int>("Direction");

                    b.Property<long?>("ReservationId");

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("AgentApp.Models.PeriodPrice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccommodationId");

                    b.Property<DateTime>("EndDate");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationId");

                    b.ToTable("PeriodPrices");
                });

            modelBuilder.Entity("AgentApp.Models.Reservation", b =>
                {
                    b.Property<long>("Id");

                    b.Property<long?>("AccommodationId");

                    b.Property<DateTime>("EndDate");

                    b.Property<bool>("Realized");

                    b.Property<long?>("ReservationRatingId");

                    b.Property<DateTime>("StartDate");

                    b.Property<long>("UserID");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationId");

                    b.HasIndex("ReservationRatingId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("AgentApp.Models.ReservationRating", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<bool>("Published");

                    b.Property<int>("Rating");

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("Id");

                    b.ToTable("ReservationRatings");
                });

            modelBuilder.Entity("AgentApp.Models.Unavailability", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccommodationId");

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationId");

                    b.ToTable("Unavailabilities");
                });

            modelBuilder.Entity("AgentDB.Models.AdditionalServicesOnly", b =>
                {
                    b.Property<long>("Id");

                    b.Property<string>("AdditionalServiceName");

                    b.HasKey("Id");

                    b.ToTable("AdditionalServicesOnlies");
                });

            modelBuilder.Entity("AgentApp.Models.Accommodation", b =>
                {
                    b.HasOne("AgentApp.Models.AccommodationType", "AccommodationType")
                        .WithMany()
                        .HasForeignKey("AccommodationTypeId");

                    b.HasOne("AgentApp.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");
                });

            modelBuilder.Entity("AgentApp.Models.AdditionalService", b =>
                {
                    b.HasOne("AgentApp.Models.Accommodation")
                        .WithMany("AdditionalServices")
                        .HasForeignKey("AccommodationId");
                });

            modelBuilder.Entity("AgentApp.Models.Message", b =>
                {
                    b.HasOne("AgentApp.Models.Reservation")
                        .WithMany("Messages")
                        .HasForeignKey("ReservationId");
                });

            modelBuilder.Entity("AgentApp.Models.PeriodPrice", b =>
                {
                    b.HasOne("AgentApp.Models.Accommodation")
                        .WithMany("PeriodPrices")
                        .HasForeignKey("AccommodationId");
                });

            modelBuilder.Entity("AgentApp.Models.Reservation", b =>
                {
                    b.HasOne("AgentApp.Models.Accommodation", "Accommodation")
                        .WithMany("Reservations")
                        .HasForeignKey("AccommodationId");

                    b.HasOne("AgentApp.Models.ReservationRating", "ReservationRating")
                        .WithMany()
                        .HasForeignKey("ReservationRatingId");
                });

            modelBuilder.Entity("AgentApp.Models.Unavailability", b =>
                {
                    b.HasOne("AgentApp.Models.Accommodation")
                        .WithMany("Unavailabilities")
                        .HasForeignKey("AccommodationId");
                });
#pragma warning restore 612, 618
        }
    }
}
